digraph {
  rankdir="BT"

  // types
  node[shape=box];
  SelectorGroup;
  Selector;
  TypeSelector;
  SelectorFilter;
  Namespace;
  Hash;
  Class;
  Attribute;
  AttributeName;

  // constructors (if not the same as the type)
  node[shape=trapezium];
  Exists;
  Attribute2[label="Attribute"];

  // reference
  edge[arrowhead=normal];
  Selector -> TypeSelector;
  TypeSelector -> Namespace;
  AttributeName -> Namespace;
  Exists -> AttributeName;
  Attribute2 -> AttributeName;

  // inheritance (child-to-parent)
  edge[arrowhead=onormal];
  Hash -> SelectorFilter;
  Class -> SelectorFilter;
  Attribute -> SelectorFilter;
  Exists -> Attribute;
  Attribute2 -> Attribute;
  // collection (many-to-one)
  edge[arrowhead=none, dir=back, arrowtail=odiamond, headlabel="1", taillabel="0...N"];
  // collection (many-to-one, at least one)
  SelectorFilter -> Selector;
  edge[taillabel="1..N"];
  Selector -> SelectorGroup;
}
